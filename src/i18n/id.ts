export const strings = {
  appTitle: "Kos Anggur Merah",
  demoMode: "Mode Demo",
  resetDemo: "Atur Ulang Data Demo",
  rooms: "Kamar",
  room: "Kamar",
  tenant: "Penghuni",
  rent: "Sewa",
  dueDay: "Tanggal Jatuh Tempo",
  paymentStatus: "Status Pembayaran",
  penaltiesThisMonth: "Denda (Bulan Ini)",
  actions: "Aksi",
  addRoom: "Tambah Kamar",
  delete: "Hapus",
  recordPayment: "Catat Pembayaran",
  totalOccupied: "Total Terisi",
  roomsLeft: "Sisa Kamar",
  totalPaid: "Total Lunas",
  totalUnpaid: "Belum Lunas",
  searchPlaceholder: "Cari Penghuni / Kamar",
  roomNumber: "Nomor Kamar",
  rentPrice: "Harga Sewa",
  status: "Status",
  tenantName: "Nama Penghuni",
  occupied: "terisi",
  vacant: "kosong",
  save: "Simpan",
  cancel: "Batal",
  amountPaid: "Jumlah Dibayar",
  paymentDate: "Tanggal Bayar",
  method: "Metode",
  paid: "Lunas",
  unpaid: "Belum Bayar",
  lateDays: "Telat {{days}} hari",
  penalties: "Denda",
  penalty: "Denda",
  type: "Jenis",
  amount: "Jumlah",
  date: "Tanggal",
  notes: "Catatan",
  addPenalty: "Tambah Denda",
  markPaid: "Tandai Lunas",
  expenses: "Pengeluaran",
  addExpense: "Tambah Pengeluaran",
  category: "Kategori",
  edit: "Ubah",
  monthlySummary: "Ringkasan Keuangan Bulanan",
  rentInvoiced: "Sewa Ditagihkan",
  rentCollected: "Sewa Terkumpul",
  penaltiesIncurred: "Denda Terjadi",
  penaltiesCollected: "Denda Terkumpul",
  netRealized: "Bersih (Realisasi)",
  expensesLegend: "Pengeluaran",
  incomeVsExpenses: "Pendapatan vs Pengeluaran",
  netProfit: "Laba Bersih (Realisasi vs Kotor)",
  from: "Dari",
  to: "Sampai",
  csv: "CSV",
  excel: "Excel",
  pdf: "PDF",
  rentCollectedLegend: "Sewa Terkumpul",
  penaltiesCollectedLegend: "Denda Terkumpul",
  netRealizedLegend: "Bersih Realisasi",
  netGrossLegend: "Bersih Kotor",
  totalGrossProfit: "Total Keuntungan Kotor",
  totalExpenses: "Total Pengeluaran",
  totalNetProfit: "Total Pendapatan Bersih Net",
  autoLateFee: "Denda otomatis telat",
  late_payment: "telat_bayar",
  overnight_guest: "tamu_menginap",
  electricity: "Listrik",
  water: "Air",
  cleaning_fee: "Iuran Kebersihan",
  security_fee: "Iuran Keamanan",
  property_tax: "PBB",
  salary: "Gaji",
  mother_deposit: "Setoran Mak",
  dividend_expense: "Kebutuhan Lain (Dividen)",
  other: "Lainnya",
  validationError: "Validasi gagal",
  noRooms: "Belum ada kamar",
  noPenalties: "Tidak ada denda",
  noExpenses: "Tidak ada pengeluaran",
  // Newly added keys for full translation
  close: "Tutup",
  roomAdded: "Kamar ditambahkan",
  errorAddRoom: "Gagal menambah kamar",
  roomDeleted: "Kamar dihapus",
  errorDeleteRoom: "Gagal menghapus kamar",
  roomUpdated: "Kamar diperbarui",
  errorUpdateRoom: "Gagal memperbarui kamar",
  dueSort: "Urut Tanggal Jatuh Tempo",
  dueSortNearest: "Tanggal Jatuh Tempo Terdekat",
  penaltyAdded: "Denda ditambahkan",
  penaltyUpdated: "Denda diperbarui",
  penaltyDeleted: "Denda dihapus",
  errorAddingPenalty: "Gagal menambah denda",
  errorUpdatingPenalty: "Gagal memperbarui denda",
  errorDeletingPenalty: "Gagal menghapus denda",
  expenseAdded: "Pengeluaran ditambahkan",
  expenseUpdated: "Pengeluaran diperbarui",
  expenseDeleted: "Pengeluaran dihapus",
  errorAddingExpense: "Gagal menambah pengeluaran",
  errorUpdatingExpense: "Gagal memperbarui pengeluaran",
  errorDeletingExpense: "Gagal menghapus pengeluaran",
  custom: "Kustom",
  description: "Deskripsi",
  maintenance: "Perawatan", // legacy (possibly unused now)
  cleaning: "Kebersihan", // legacy
  cash: "Tunai",
  transfer: "Transfer",
  paymentRecorded: "Pembayaran dicatat",
  paymentUpdated: "Pembayaran diperbarui",
  errorSavingPayment: "Gagal menyimpan pembayaran",
  saving: "Menyimpan...",
  savePayment: "Simpan Pembayaran",
  errorDueDayRange: "Hari jatuh tempo harus 1 - 31",
};
export type TKey = keyof typeof strings;
export function t(key: TKey, repl?: Record<string, string | number>) {
  let s = strings[key] || key;
  if (repl) {
    for (const [k, v] of Object.entries(repl)) {
      s = s.replace(new RegExp(`{{${k}}}`, "g"), String(v));
    }
  }
  return s;
}
